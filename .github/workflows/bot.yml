name: elfak bot

on:
  schedule:
    - cron: '30 * * * *'
  workflow_dispatch:  # Allow manual trigger

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Setup Python environment
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      # Step 3: Install system dependencies
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libnss3

      # Step 4: Verify installations
      - name: Verify Chromium and Chromedriver installation
        run: |
          echo "Checking Chromium installation..."
          google-chrome --version
          which google-chrome

          echo "Checking Chromedriver installation..."
          chromedriver --version
          which chromedriver

      # Step 5: Install Python dependencies
      - name: Install Python packages
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Step 6: Run scraping script
      - name: Run main script
        env:
          MAIL: ${{ secrets.MAIL }}
          PASSWORD: ${{ secrets.PASSWORD }}
        run: python bp-m.py

      # Step 7: Commit changes to novosti.md
      - name: Commit changes
        uses: lazarevicOgnjen/git-auto-commit-action@v6
        with:
          commit_message: Update bp.md
          file_pattern: bp.md
        id: auto-commit-action1

      # Step 8: Take screenshot if changes detected
      - name: Take photo
        if: steps.auto-commit-action1.outputs.changes_detected == 'true'
        env:
          MAIL: ${{ secrets.MAIL }}
          PASSWORD: ${{ secrets.PASSWORD }}
        run: python bp-p.py

      # Step 9: Notify via Discord bot
      - name: Discord bot notification
        if: steps.auto-commit-action1.outputs.changes_detected == 'true'
        env:
          WEBHOOK_MAIN: ${{ secrets.WEBHOOK_MAIN }}
        run: python bp-d.py

      # Step 10: Run scraping script
      - name: Run main script
        env:
          MAIL: ${{ secrets.MAIL }}
          PASSWORD: ${{ secrets.PASSWORD }}
        run: python lp-m.py

      # Step 11: Commit changes to novosti.md
      - name: Commit changes
        uses: lazarevicOgnjen/git-auto-commit-action@v6
        with:
          commit_message: Update lp.md
          file_pattern: lp.md
        id: auto-commit-action2

      # Step 12: Take screenshot if changes detected
      - name: Take photo
        if: steps.auto-commit-action2.outputs.changes_detected == 'true'
        env:
          MAIL: ${{ secrets.MAIL }}
          PASSWORD: ${{ secrets.PASSWORD }}
        run: python lp-p.py

      # Step 13: Notify via Discord bot
      - name: Discord bot notification
        if: steps.auto-commit-action2.outputs.changes_detected == 'true'
        env:
          WEBHOOK_MAIN: ${{ secrets.WEBHOOK_MAIN }}
        run: python lp-d.py

      # Step 14: Run scraping script
      - name: Run main script
        env:
          MAIL: ${{ secrets.MAIL }}
          PASSWORD: ${{ secrets.PASSWORD }}
        run: python oop-m.py

      # Step 15: Commit changes to novosti.md
      - name: Commit changes
        uses: lazarevicOgnjen/git-auto-commit-action@v6
        with:
          commit_message: Update oop.md
          file_pattern: oop.md
        id: auto-commit-action3

      # Step 16: Take screenshot if changes detected
      - name: Take photo
        if: steps.auto-commit-action3.outputs.changes_detected == 'true'
        env:
          MAIL: ${{ secrets.MAIL }}
          PASSWORD: ${{ secrets.PASSWORD }}
        run: python oop-p.py

      # Step 17: Notify via Discord bot
      - name: Discord bot notification
        if: steps.auto-commit-action3.outputs.changes_detected == 'true'
        env:
          WEBHOOK_MAIN: ${{ secrets.WEBHOOK_MAIN }}
        run: python oop-d.py

      # Step 18: Run scraping script
      - name: Run main script
        env:
          MAIL: ${{ secrets.MAIL }}
          PASSWORD: ${{ secrets.PASSWORD }}
        run: python pj-m.py

      # Step 19: Commit changes to novosti.md
      - name: Commit changes
        uses: lazarevicOgnjen/git-auto-commit-action@v6
        with:
          commit_message: Update pj.md
          file_pattern: pj.md
        id: auto-commit-action4

      # Step 20: Take screenshot if changes detected
      - name: Take photo
        if: steps.auto-commit-action4.outputs.changes_detected == 'true'
        env:
          MAIL: ${{ secrets.MAIL }}
          PASSWORD: ${{ secrets.PASSWORD }}
        run: python pj-p.py

      # Step 21: Notify via Discord bot
      - name: Discord bot notification
        if: steps.auto-commit-action4.outputs.changes_detected == 'true'
        env:
          WEBHOOK_MAIN: ${{ secrets.WEBHOOK_MAIN }}
        run: python pj-d.py

      # Step 22: Run scraping script
      - name: Run main script
        env:
          MAIL: ${{ secrets.MAIL }}
          PASSWORD: ${{ secrets.PASSWORD }}
        run: python sp-m.py

      # Step 23: Commit changes to novosti.md
      - name: Commit changes
        uses: lazarevicOgnjen/git-auto-commit-action@v6
        with:
          commit_message: Update sp.md
          file_pattern: sp.md
        id: auto-commit-action5

      # Step 24: Take screenshot if changes detected
      - name: Take photo
        if: steps.auto-commit-action5.outputs.changes_detected == 'true'
        env:
          MAIL: ${{ secrets.MAIL }}
          PASSWORD: ${{ secrets.PASSWORD }}
        run: python sp-p.py

      # Step 25: Notify via Discord bot
      - name: Discord bot notification
        if: steps.auto-commit-action5.outputs.changes_detected == 'true'
        env:
          WEBHOOK_MAIN: ${{ secrets.WEBHOOK_MAIN }}
        run: python sp-d.py

      # Step 26: Run scraping script
      - name: Run main script
        env:
          MAIL: ${{ secrets.MAIL }}
          PASSWORD: ${{ secrets.PASSWORD }}
        run: python aor1-m.py

      # Step 27: Commit changes to novosti.md
      - name: Commit changes
        uses: lazarevicOgnjen/git-auto-commit-action@v6
        with:
          commit_message: Update aor1.md
          file_pattern: aor1.md
        id: auto-commit-action6

      # Step 28: Take screenshot if changes detected
      - name: Take photo
        if: steps.auto-commit-action6.outputs.changes_detected == 'true'
        env:
          MAIL: ${{ secrets.MAIL }}
          PASSWORD: ${{ secrets.PASSWORD }}
        run: python aor1-p.py

      # Step 29: Notify via Discord bot
      - name: Discord bot notification
        if: steps.auto-commit-action6.outputs.changes_detected == 'true'
        env:
          WEBHOOK_MAIN: ${{ secrets.WEBHOOK_MAIN }}
        run: python aor1-d.py

      # Step 30: Run scraping script
      - name: Run main script
        env:
          MAIL: ${{ secrets.MAIL }}
          PASSWORD: ${{ secrets.PASSWORD }}
        run: python oopj-m.py

      # Step 31: Commit changes to novosti.md
      - name: Commit changes
        uses: lazarevicOgnjen/git-auto-commit-action@v6
        with:
          commit_message: Update oopj.md
          file_pattern: oopj.md
        id: auto-commit-action7

      # Step 32: Take screenshot if changes detected
      - name: Take photo
        if: steps.auto-commit-action7.outputs.changes_detected == 'true'
        env:
          MAIL: ${{ secrets.MAIL }}
          PASSWORD: ${{ secrets.PASSWORD }}
        run: python oopj-p.py

      # Step 33: Notify via Discord bot
      - name: Discord bot notification
        if: steps.auto-commit-action7.outputs.changes_detected == 'true'
        env:
          WEBHOOK_MAIN: ${{ secrets.WEBHOOK_MAIN }}
        run: python oopj-d.py
